# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.9
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_KSMarketDataAPI', [dirname(__file__)])
        except ImportError:
            import _KSMarketDataAPI
            return _KSMarketDataAPI
        if fp is not None:
            try:
                _mod = imp.load_module('_KSMarketDataAPI', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _KSMarketDataAPI = swig_import_helper()
    del swig_import_helper
else:
    import _KSMarketDataAPI
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class CThostFtdcMdSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMdSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMdSpi, name)
    __repr__ = _swig_repr
    def OnFrontConnected(self): return _KSMarketDataAPI.CThostFtdcMdSpi_OnFrontConnected(self)
    def OnFrontDisconnected(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnFrontDisconnected(self, *args)
    def OnHeartBeatWarning(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnHeartBeatWarning(self, *args)
    def OnRspUserLogin(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnRspUserLogin(self, *args)
    def OnRspUserLogout(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnRspUserLogout(self, *args)
    def OnRspError(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnRspError(self, *args)
    def OnRspSubMarketData(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnRspSubMarketData(self, *args)
    def OnRspUnSubMarketData(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnRspUnSubMarketData(self, *args)
    def OnRtnDepthMarketData(self, *args): return _KSMarketDataAPI.CThostFtdcMdSpi_OnRtnDepthMarketData(self, *args)
    def __init__(self): 
        this = _KSMarketDataAPI.new_CThostFtdcMdSpi()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _KSMarketDataAPI.delete_CThostFtdcMdSpi
    __del__ = lambda self : None;
CThostFtdcMdSpi_swigregister = _KSMarketDataAPI.CThostFtdcMdSpi_swigregister
CThostFtdcMdSpi_swigregister(CThostFtdcMdSpi)

class CThostFtdcMdApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CThostFtdcMdApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CThostFtdcMdApi, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_getmethods__["CreateFtdcMdApi"] = lambda x: _KSMarketDataAPI.CThostFtdcMdApi_CreateFtdcMdApi
    if _newclass:CreateFtdcMdApi = staticmethod(_KSMarketDataAPI.CThostFtdcMdApi_CreateFtdcMdApi)
    def Release(self): return _KSMarketDataAPI.CThostFtdcMdApi_Release(self)
    def Init(self): return _KSMarketDataAPI.CThostFtdcMdApi_Init(self)
    def Join(self): return _KSMarketDataAPI.CThostFtdcMdApi_Join(self)
    def GetTradingDay(self): return _KSMarketDataAPI.CThostFtdcMdApi_GetTradingDay(self)
    def RegisterFront(self, *args): return _KSMarketDataAPI.CThostFtdcMdApi_RegisterFront(self, *args)
    def RegisterNameServer(self, *args): return _KSMarketDataAPI.CThostFtdcMdApi_RegisterNameServer(self, *args)
    def RegisterSpi(self, *args): return _KSMarketDataAPI.CThostFtdcMdApi_RegisterSpi(self, *args)
    def SubscribeMarketData(self, *args): return _KSMarketDataAPI.CThostFtdcMdApi_SubscribeMarketData(self, *args)
    def UnSubscribeMarketData(self, *args): return _KSMarketDataAPI.CThostFtdcMdApi_UnSubscribeMarketData(self, *args)
    def ReqUserLogin(self, *args): return _KSMarketDataAPI.CThostFtdcMdApi_ReqUserLogin(self, *args)
    def ReqUserLogout(self, *args): return _KSMarketDataAPI.CThostFtdcMdApi_ReqUserLogout(self, *args)
    def SetWritablePath(self, szpath=""): return _KSMarketDataAPI.CThostFtdcMdApi_SetWritablePath(self, szpath)
CThostFtdcMdApi_swigregister = _KSMarketDataAPI.CThostFtdcMdApi_swigregister
CThostFtdcMdApi_swigregister(CThostFtdcMdApi)

def CThostFtdcMdApi_CreateFtdcMdApi(pszFlowPath="", bIsUsingUdp=False):
  return _KSMarketDataAPI.CThostFtdcMdApi_CreateFtdcMdApi(pszFlowPath, bIsUsingUdp)
CThostFtdcMdApi_CreateFtdcMdApi = _KSMarketDataAPI.CThostFtdcMdApi_CreateFtdcMdApi

# This file is compatible with both classic and new-style classes.


